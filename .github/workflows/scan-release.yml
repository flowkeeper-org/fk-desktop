name: Scan release

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release to scan, e.g. v0.10.0. Empty means latest.'
        required: false
        default: ''
        type: string
  workflow_call:
    inputs:
      release:
        description: 'Release to scan, e.g. v0.10.0. Empty means latest.'
        required: true
        default: ''
        type: string
    secrets:
      VTCLI_APIKEY:
        required: true
      SLACK_BOT_TOKEN:
        required: true
      SLACK_CHANNEL_ID:
        required: true

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download binaries
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE: ${{ inputs.release }}
        run: scripts/common/download-release.sh

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Scan binaries
        shell: bash
        env:
          VTCLI_APIKEY: ${{ secrets.VTCLI_APIKEY }}
        run: |
          pip install vt-py
          SCAN_STATUS=$(python3 scripts/windows/vtscan.py downloads/*.exe)
          echo "$SCAN_STATUS"
          {
            echo 'SCAN_STATUS<<EOF'
            echo "$SCAN_STATUS"
            echo EOF
          } >> $GITHUB_ENV

      - name: Save scan results as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: vtscan-results
          path: |
            vtscan-results-all.json
            vtscan-results-warnings.json

      - name: Post message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "${{ env.SCAN_STATUS }}"

  upload:
    # Making it a standalone job to limit security its perimeter
    runs-on: ubuntu-latest
    needs: scan
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: vtscan-results
          path: .

      - name: Upload scan results back to release
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE: ${{ inputs.release }}
        run: scripts/common/upload-release.sh vtscan-results-all.json vtscan-results-warnings.json
